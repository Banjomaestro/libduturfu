add_test([=[RationnelsConstructor.basicConstructor]=]  /Users/mac/Documents/lessons/imac/second_year/first_semester/libduturfu/build/bin/UnitTest [==[--gtest_filter=RationnelsConstructor.basicConstructor]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[RationnelsConstructor.basicConstructor]=]  PROPERTIES WORKING_DIRECTORY /Users/mac/Documents/lessons/imac/second_year/first_semester/libduturfu/build/INTERFACE/UnitTest SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[RationnelsConstructor.floatConstructor]=]  /Users/mac/Documents/lessons/imac/second_year/first_semester/libduturfu/build/bin/UnitTest [==[--gtest_filter=RationnelsConstructor.floatConstructor]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[RationnelsConstructor.floatConstructor]=]  PROPERTIES WORKING_DIRECTORY /Users/mac/Documents/lessons/imac/second_year/first_semester/libduturfu/build/INTERFACE/UnitTest SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[UnaryMinus.minus]=]  /Users/mac/Documents/lessons/imac/second_year/first_semester/libduturfu/build/bin/UnitTest [==[--gtest_filter=UnaryMinus.minus]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[UnaryMinus.minus]=]  PROPERTIES WORKING_DIRECTORY /Users/mac/Documents/lessons/imac/second_year/first_semester/libduturfu/build/INTERFACE/UnitTest SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[add.addTest]=]  /Users/mac/Documents/lessons/imac/second_year/first_semester/libduturfu/build/bin/UnitTest [==[--gtest_filter=add.addTest]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[add.addTest]=]  PROPERTIES WORKING_DIRECTORY /Users/mac/Documents/lessons/imac/second_year/first_semester/libduturfu/build/INTERFACE/UnitTest SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[sub.subTest]=]  /Users/mac/Documents/lessons/imac/second_year/first_semester/libduturfu/build/bin/UnitTest [==[--gtest_filter=sub.subTest]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[sub.subTest]=]  PROPERTIES WORKING_DIRECTORY /Users/mac/Documents/lessons/imac/second_year/first_semester/libduturfu/build/INTERFACE/UnitTest SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[multiply.multiplyTest]=]  /Users/mac/Documents/lessons/imac/second_year/first_semester/libduturfu/build/bin/UnitTest [==[--gtest_filter=multiply.multiplyTest]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[multiply.multiplyTest]=]  PROPERTIES WORKING_DIRECTORY /Users/mac/Documents/lessons/imac/second_year/first_semester/libduturfu/build/INTERFACE/UnitTest SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[divide.divideTest]=]  /Users/mac/Documents/lessons/imac/second_year/first_semester/libduturfu/build/bin/UnitTest [==[--gtest_filter=divide.divideTest]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[divide.divideTest]=]  PROPERTIES WORKING_DIRECTORY /Users/mac/Documents/lessons/imac/second_year/first_semester/libduturfu/build/INTERFACE/UnitTest SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[logarithme.logarithmeTest]=]  /Users/mac/Documents/lessons/imac/second_year/first_semester/libduturfu/build/bin/UnitTest [==[--gtest_filter=logarithme.logarithmeTest]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[logarithme.logarithmeTest]=]  PROPERTIES WORKING_DIRECTORY /Users/mac/Documents/lessons/imac/second_year/first_semester/libduturfu/build/INTERFACE/UnitTest SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[exponential.exponentialTest]=]  /Users/mac/Documents/lessons/imac/second_year/first_semester/libduturfu/build/bin/UnitTest [==[--gtest_filter=exponential.exponentialTest]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[exponential.exponentialTest]=]  PROPERTIES WORKING_DIRECTORY /Users/mac/Documents/lessons/imac/second_year/first_semester/libduturfu/build/INTERFACE/UnitTest SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[cosine.cosineTest]=]  /Users/mac/Documents/lessons/imac/second_year/first_semester/libduturfu/build/bin/UnitTest [==[--gtest_filter=cosine.cosineTest]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[cosine.cosineTest]=]  PROPERTIES WORKING_DIRECTORY /Users/mac/Documents/lessons/imac/second_year/first_semester/libduturfu/build/INTERFACE/UnitTest SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[sine.sineTest]=]  /Users/mac/Documents/lessons/imac/second_year/first_semester/libduturfu/build/bin/UnitTest [==[--gtest_filter=sine.sineTest]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[sine.sineTest]=]  PROPERTIES WORKING_DIRECTORY /Users/mac/Documents/lessons/imac/second_year/first_semester/libduturfu/build/INTERFACE/UnitTest SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[abs.absTest]=]  /Users/mac/Documents/lessons/imac/second_year/first_semester/libduturfu/build/bin/UnitTest [==[--gtest_filter=abs.absTest]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[abs.absTest]=]  PROPERTIES WORKING_DIRECTORY /Users/mac/Documents/lessons/imac/second_year/first_semester/libduturfu/build/INTERFACE/UnitTest SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[whole.wholeTest]=]  /Users/mac/Documents/lessons/imac/second_year/first_semester/libduturfu/build/bin/UnitTest [==[--gtest_filter=whole.wholeTest]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[whole.wholeTest]=]  PROPERTIES WORKING_DIRECTORY /Users/mac/Documents/lessons/imac/second_year/first_semester/libduturfu/build/INTERFACE/UnitTest SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[floatProductTest.floatProductTesting]=]  /Users/mac/Documents/lessons/imac/second_year/first_semester/libduturfu/build/bin/UnitTest [==[--gtest_filter=floatProductTest.floatProductTesting]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[floatProductTest.floatProductTesting]=]  PROPERTIES WORKING_DIRECTORY /Users/mac/Documents/lessons/imac/second_year/first_semester/libduturfu/build/INTERFACE/UnitTest SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[floatDivideTest.floatDivideTesting]=]  /Users/mac/Documents/lessons/imac/second_year/first_semester/libduturfu/build/bin/UnitTest [==[--gtest_filter=floatDivideTest.floatDivideTesting]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[floatDivideTest.floatDivideTesting]=]  PROPERTIES WORKING_DIRECTORY /Users/mac/Documents/lessons/imac/second_year/first_semester/libduturfu/build/INTERFACE/UnitTest SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[squareRoot.squareRootTest]=]  /Users/mac/Documents/lessons/imac/second_year/first_semester/libduturfu/build/bin/UnitTest [==[--gtest_filter=squareRoot.squareRootTest]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[squareRoot.squareRootTest]=]  PROPERTIES WORKING_DIRECTORY /Users/mac/Documents/lessons/imac/second_year/first_semester/libduturfu/build/INTERFACE/UnitTest SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[power.powerTest]=]  /Users/mac/Documents/lessons/imac/second_year/first_semester/libduturfu/build/bin/UnitTest [==[--gtest_filter=power.powerTest]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[power.powerTest]=]  PROPERTIES WORKING_DIRECTORY /Users/mac/Documents/lessons/imac/second_year/first_semester/libduturfu/build/INTERFACE/UnitTest SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[boolean.booleanTest]=]  /Users/mac/Documents/lessons/imac/second_year/first_semester/libduturfu/build/bin/UnitTest [==[--gtest_filter=boolean.booleanTest]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[boolean.booleanTest]=]  PROPERTIES WORKING_DIRECTORY /Users/mac/Documents/lessons/imac/second_year/first_semester/libduturfu/build/INTERFACE/UnitTest SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
set(  UnitTest_TESTS RationnelsConstructor.basicConstructor RationnelsConstructor.floatConstructor UnaryMinus.minus add.addTest sub.subTest multiply.multiplyTest divide.divideTest logarithme.logarithmeTest exponential.exponentialTest cosine.cosineTest sine.sineTest abs.absTest whole.wholeTest floatProductTest.floatProductTesting floatDivideTest.floatDivideTesting squareRoot.squareRootTest power.powerTest boolean.booleanTest)
